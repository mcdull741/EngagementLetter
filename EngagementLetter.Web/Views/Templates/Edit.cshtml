@model EngagementLetter.Web.Controllers.TemplateEditViewModel

@{
    ViewData["Title"] = "编辑模板";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0">编辑模板</h1>
        <a href="/Templates" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-1"></i>返回列表
        </a>
    </div>

    <form asp-action="Edit" method="post" enctype="multipart/form-data" id="templateForm">
        <input type="hidden" asp-for="Id" />
        
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">模板基本信息</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">模板名称 <span class="text-danger">*</span></label>
                            <input asp-for="Name" class="form-control" placeholder="请输入模板名称" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">模板描述</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="请输入模板描述"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="QuestionnaireId" class="form-label">关联问卷 <span class="text-danger">*</span></label>
                                    <select asp-for="QuestionnaireId" class="form-select" asp-items="Model.Questionnaires">
                                        <option value="">-- 请选择问卷 --</option>
                                    </select>
                                    <span asp-validation-for="QuestionnaireId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Priority" class="form-label">优先级 <span class="text-danger">*</span></label>
                                    <select asp-for="Priority" class="form-select">
                                        <option value="100">最高 (100)</option>
                                        <option value="90">很高 (90)</option>
                                        <option value="80">高 (80)</option>
                                        <option value="70">中高 (70)</option>
                                        <option value="60">中等 (60)</option>
                                        <option value="50">中低 (50)</option>
                                        <option value="40">低 (40)</option>
                                        <option value="30">较低 (30)</option>
                                        <option value="20">很低 (20)</option>
                                        <option value="10">最低 (10)</option>
                                    </select>
                                    <span asp-validation-for="Priority" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="TemplateFile" class="form-label">模板文件（可选）</label>
                            <input asp-for="TemplateFile" type="file" class="form-control" accept=".docx" />
                            <div class="form-text">仅支持 .docx 格式的Word文档，留空则保持原文件</div>
                            <span asp-validation-for="TemplateFile" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">当前文件</label>
                            <div class="form-text">
                                @if (!string.IsNullOrEmpty(Model.FileName))
                                {
                                    <i class="fas fa-file-word text-primary me-1"></i>
                                    <a href="/Templates/Download/@Model.Id" target="_blank">@Model.FileName</a>
                                }
                                else
                                {
                                    <i class="fas fa-exclamation-circle text-warning me-1"></i>
                                    <span class="text-muted">无文件</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mt-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">模板条件设置</h5>
                    </div>
                    <div class="card-body">
                        <iframe id="conditionsFrame" 
                                src="/Templates/_ConditionsFrame" 
                                width="100%" 
                                height="400" 
                                frameborder="0"
                                style="min-height: 400px;"></iframe>
                        <input type="hidden" id="conditionsData" name="ConditionsData" />
                        <input type="hidden" id="originalConditions" value='@Html.Raw(Json.Serialize(Model.Conditions))' />
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">操作</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i>保存修改
                            </button>
                            <a href="/Templates" class="btn btn-secondary">
                                <i class="fas fa-times me-1"></i>取消
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card mt-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">提示</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-unstyled small">
                            <li class="mb-2">
                                <i class="fas fa-info-circle text-info me-1"></i>
                                模板条件将在保存模板时一并保存到数据库
                            </li>
                            <li class="mb-2">
                                <i class="fas fa-exclamation-triangle text-warning me-1"></i>
                                如果不上传新文件，将保留原有的模板文件
                            </li>
                            <li class="mb-2">
                                <i class="fas fa-lightbulb text-success me-1"></i>
                                建议为模板设置合适的优先级，影响匹配顺序
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let conditionsData = [];
        let conditionsFrameLoaded = false;

        $(document).ready(function() {
            // 加载原始条件数据
            const originalConditions = JSON.parse($('#originalConditions').val() || '[]');
            conditionsData = originalConditions || [];

            // 监听问卷变化
            $('#QuestionnaireId').on('change', function() {
                const selectedQuestionnaireId = $(this).val();
                if (selectedQuestionnaireId && conditionsFrameLoaded) {
                    const frame = document.getElementById('conditionsFrame');
                    frame.contentWindow.postMessage({
                        type: 'setQuestionnaireId',
                        questionnaireId: selectedQuestionnaireId,
                        conditions: conditionsData
                    }, '*');
                }
            });

            // 监听来自iframe的消息
            window.addEventListener('message', function(event) {
                if (event.data.type === 'conditionsFrameLoaded') {
                    conditionsFrameLoaded = true;
                    const selectedQuestionnaireId = $('#QuestionnaireId').val();
                    if (selectedQuestionnaireId) {
                        const frame = document.getElementById('conditionsFrame');
                        frame.contentWindow.postMessage({
                            type: 'setQuestionnaireId',
                            questionnaireId: selectedQuestionnaireId,
                            conditions: conditionsData
                        }, '*');
                    }
                } else if (event.data.type === 'conditionsData') {
                    conditionsData = event.data.conditions;
                    $('#conditionsData').val(JSON.stringify(conditionsData));
                }
            });

            // 调整iframe高度
            function adjustIframeHeight() {
                const frame = document.getElementById('conditionsFrame');
                if (frame && frame.contentDocument) {
                    const height = frame.contentDocument.body.scrollHeight;
                    frame.style.height = (height + 50) + 'px';
                }
            }

            // 定期检查iframe高度
            setInterval(adjustIframeHeight, 500);
        });

        function generateGuid() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                const r = Math.random() * 16 | 0;
                const v = c === 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        // 表单提交前验证
        $('#templateForm').on('submit', function(e) {
            console.log("表单提交事件触发");
            console.log("conditionsData:", conditionsData);
            console.log("表单验证状态:", $(this).valid());
            
            // 检查表单验证
            if (!$(this).valid()) {
                console.log("表单验证失败，阻止提交");
                e.preventDefault();
                return false;
            }
            
            // 验证条件数据的完整性
            if (conditionsData && conditionsData.length > 0) {
                // 过滤掉无效的条件（没有questionId的）
                const validConditions = conditionsData.filter(condition => 
                    condition.questionId && condition.questionId.trim() !== ''
                );
                
                if (validConditions.length !== conditionsData.length) {
                    console.log("发现无效的条件，已过滤");
                    conditionsData = validConditions;
                }
                
                if (conditionsData.length === 0) {
                    console.log("所有条件都被过滤，清空条件数据");
                    $('#conditionsData').val('[]');
                } else {
                    $('#conditionsData').val(JSON.stringify(conditionsData));
                    console.log("条件数据已设置:", JSON.stringify(conditionsData));
                }
            } else {
                console.log("无条件数据需要保存");
                $('#conditionsData').val('[]');
            }
        });
    </script>
}